[
  {
    "id": "website",
    "name": "Website",
    "platform": "TypeScript Angular app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "https://github.com/chrisstonedev/website",
    "description": "Profile and portfolio website written in Angular. In fact, this is where you are right now."
  },
  {
    "id": "sprint-planning-timer",
    "name": "Sprint Planning Timer",
    "platform": "Kotlin Android app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "https://github.com/chrisstonedev/sprint-planning-timer-android",
    "description": "I needed a way to keep track of how many items we needed to cover in sprint planning and backlog refinement meetings and make sure that we are still on track to finish the meeting in time. I used this as an opportunity to continue learning Kotlin and Android development."
  },
  {
    "id": "onefreight",
    "name": "oneFreight",
    "platform": "C# Windows Forms app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "",
    "description": "Volunteered to help in multiple cross-team projects. Served as lead developer of new initiative program while continuing to contribute in core product scrum team. Hired, managed, and mentored new development team for the program after it succeeded its initiative phase and received additional funding from the business."
  },
  {
    "id": "self-check-in",
    "name": "Self Check-In",
    "platform": "C# WPF app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "",
    "description": "Designed architecture and led development of a touchscreen interface for Ticket Entry. Wrote front-end as a WPF application that can connect with external serial/COM and Ethernet/IP devices, and wrote the server back-end that handles database calls and communicates with the client over HTTP sockets. Additionally, created and presented a Xamarin.Forms proof-of-concept mobile application for future consideration."
  },
  {
    "id": "communicator",
    "name": "Communicator",
    "platform": "C# Windows Forms app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "",
    "description": "Wrote background application to push transactional data to internal and third-party systems using a variety of interfaces including REST APIs, legacy Component Services applications, and Azure Event Hubs and Storage Account uploads."
  },
  {
    "id": "audit-log",
    "name": "Audit Log",
    "platform": "C# Windows Forms app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "",
    "description": "Created and maintained first C# projects in a previously-all-VB6 product, starting with this standalone Windows Forms applications. Using a Model-View-Presenter pattern, I was able to create our team's first unit tests using MSTest V2 and Moq. Later improved performance by introducing background worker threads and asynchronous functions to load hundreds of thousands of log records in seconds."
  },
  {
    "id": "ticket-entry",
    "name": "Ticket Entry",
    "platform": "Visual Basic 6.0 desktop app",
    "image": "assets/comingsoon.png",
    "image2": "assets/comingsoon.png",
    "image3": "assets/comingsoon.png",
    "availability": "",
    "availabilityLink": "",
    "source": "",
    "description": "Contributed in program written in Visual Basic 6.0 that interfaces with devices such as scales, printers, LED signs, signature pads, fingerprint scanners, and more, all connected by serial port, IP port, or USB. Connects to various enterprise accounting software."
  },
  {
    "id": "gymrattrax",
    "name": "GymRatTrax",
    "platform": "Java Android application",
    "image": "assets/gymrattrax.png",
    "image2": "assets/gymrattrax.png",
    "image3": "assets/gymrattrax.png",
    "availability": "Download app",
    "availabilityLink": "https://play.google.com/store/apps/details?id=com.gymrattrax.scheduler&hl=en",
    "source": "https://github.com/GymRatTrax/GymRatTrax-FitnessScheduler",
    "description": "Started as a senior academic project, I worked as team leader and lead developer on this project. GymRatTrax is a personal fitness scheduler application made to replace a fitness planner with features such as adaptive suggestions, reverse calorie search, and robust statistics. This is the first Android application I have developed that has been published to the Google Play Store."
  },
  {
    "id": "hash-it-out",
    "name": "Hash It Out",
    "platform": "C# WPF app",
    "image": "assets/hashitout.png",
    "image2": "assets/hashitout.png",
    "image3": "assets/hashitout.png",
    "availability": "Download app",
    "availabilityLink": "assets/HashItOut.zip",
    "source": "https://github.com/chrisstonedev/hash-it-out",
    "description": "Windows application that quickly returns MD5 and SHA-1 checksums for any provided file. Target values can be copied and pasted to the side with an indicator appearing to quickly tell the user if the value match or not."
  },
  {
    "id": "bookshop",
    "name": "Bookshop",
    "platform": "PHP web app",
    "image": "assets/bookshop.png",
    "image2": "assets/bookshop.png",
    "image3": "assets/bookshop.png",
    "availability": "Live demo",
    "availabilityLink": "http://cjstone.net/bookshop/",
    "source": "https://github.com/chrisstonedev/bookshop-demo",
    "description": "The design of an online store with inventory and checkout functionality with secure registration and login procedures. Data integrity and user security are maintained while preventing common vulnerabilities (e.g. SQLI and XSS)."
  },
  {
    "id": "physics-units",
    "name": "Physics Units",
    "platform": "JavaScript web app",
    "image": "assets/physics.png",
    "image2": "assets/physics.png",
    "image3": "assets/physics.png",
    "availability": "Live demo",
    "availabilityLink": "http://cjstone.net/physics/",
    "source": "https://github.com/chrisstonedev/physics-units",
    "description": "A simple web tool in which basic SI units, such as kilograms and meters, can be multiplied and divided to reveal advanced derived units, such as Newtons and Joules. When derived units are discovered, they can be used themselves as shortcuts. Keyboard shortcuts can also be used."
  }
]
